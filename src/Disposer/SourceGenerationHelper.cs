using System.Text;

namespace Disposer;

public static class SourceGenerationHelper
{
    private const string Header = @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Disposer source generator
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
";
    public static string GenerateExtensionClass(StringBuilder sb, DisposableToGenerate enumToGenerate)
    {
        sb.Append(Header);
        bool isThereANamespace = !string.IsNullOrEmpty(enumToGenerate.Namespace);
        if (isThereANamespace)
        {
            sb.Append(@"
namespace ").Append(enumToGenerate.Namespace).Append(@"
{");
        }

        sb.Append(@"
    ").Append(@"partial class ").Append(enumToGenerate.Name).Append(" : global::System.IDisposable").Append(@"
    {
        partial void DisposeManaged();
        partial void DisposeUnmanaged();

        private bool disposed = false;
")
    .Append(@"
        ~").Append(enumToGenerate.Name).Append(@"()
        {
            Dispose(false);
        }

        private void Dispose(bool disposing)
        {
            if (disposed)
                return;

            if (disposing)
            {
                DisposeManaged();
            }

            DisposeUnmanaged();

            disposed = true;
        }

        public void Dispose()
        {
            Dispose(true);
            global::System.GC.SuppressFinalize(this);
        }
    }").Append(isThereANamespace ? @"
}": "");

        return sb.ToString();
    }
}